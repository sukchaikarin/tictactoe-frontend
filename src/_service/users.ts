// src/_services/user.ts
import axios from 'axios';

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ
export interface User {
  _id: string;
  name: string;
  email: string;
  picture: string;
  googleId: string;
  scores: number;
  highestScore: number;
  maxWinsStreak: number;
  createdAt: string;
  updatedAt: string;
}

// ‡πÉ‡∏ä‡πâ environment variable ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö base URL
const baseURL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001/v1'; // ‡∏õ‡∏£‡∏±‡∏ö URL ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô fetchUsers ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 const fetchUsers = async (): Promise<User[]> => {
  try {
    const response = await axios.get(`${baseURL}/users`); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô endpoint ‡∏ï‡∏≤‡∏° API ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
    return response.data; // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
  } catch (error) {
    console.error("Error fetching users:", error);
    throw error; // ‡∏Ç‡∏∂‡πâ‡∏ô error ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤
  }
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô fetchUser ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏° ID
 const fetchUserById = async (userId: string): Promise<User> => {
  try {
    const response = await axios.get(`${baseURL}/users/${userId}`); // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏° ID
    console.log("üöÄ ~ fetchUserById ~ response:", response)
    return response.data; // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
  } catch (error) {
    console.error("Error fetching user by ID:", error);
    throw error; // ‡∏Ç‡∏∂‡πâ‡∏ô error ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤
  }
};

export const UserService = {
    fetchUsers,fetchUserById
}
